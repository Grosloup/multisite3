<?php

namespace ZPB\AdminBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * ReporterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReporterRepository extends EntityRepository
{

    public function generatePassword()
    {
        $qb = $this->createQueryBuilder('r')->select('COUNT(s.id)');
        $count = $qb->getQuery()->getSingleScalarResult();

        $password = 'zoobeauval';
        if($count<10){
            $password .= '00' . $count;
        } elseif($count>= 10 && $count<100 ){
            $password .= '0' . $count;
        } else {
            $password .= $count;
        }
        return $password;
    }

    public function loadUserByUsername($username)
    {
        $user = $this->findOneByEmailOrUsername($username);
        if (!$user) {
            throw new UsernameNotFoundException();
        }

        return $user;
    }

    public function findOneByEmailOrUsername($username)
    {
        $qb = $this->createQueryBuilder('u')
            ->andWhere('u.username=:username OR u.email=:email')
            ->setParameter('username', $username)
            ->setParameter('email', $username);

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function refreshUser(UserInterface $user)
    {
        $class = get_class($user);
        if (!$this->supportsClass($class)) {
            throw new UnsupportedUserException();
        }
        if (null === $user = $this->find($user->getId())) {
            throw new UsernameNotFoundException();
        }

        return $user;
    }

    public function supportsClass($class)
    {
        return $this->getEntityName() === $class || is_subclass_of($class, $this->getEntityName());
    }
}
