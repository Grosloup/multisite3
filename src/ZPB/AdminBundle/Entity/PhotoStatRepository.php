<?php

namespace ZPB\AdminBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Validator\Constraints\DateTime;

/**
 * PhotoStatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PhotoStatRepository extends EntityRepository
{
    public function downloadsByMonth($year = null)
    {
        if(!$year){
            $now = new \DateTime();
            $year = $now->format('Y');
        }
        $nowYear = \DateTime::createFromFormat('Y', $year);
        $nextYear = \DateTime::createFromFormat('Y', $year);
        $nextYear->add(new \DateInterval('P1Y'));

        $qb = $this->createQueryBuilder('s')
            ->select('COUNT(s.id) as nb, SUBSTRING(s.createdAt,6,2) as m')
            ->where('s.createdAt >=:start')
            ->andWhere('s.createdAt <:end')
            ->groupBy('m')
            ->orderBy('s.createdAt', 'ASC')
            ->setParameter('start', $nowYear->format('Y') . '-01-01 00:00:00')
            ->setParameter('end',$nextYear->format('Y') . '-01-01 00:00:00');
        return $qb->getQuery()->getArrayResult();
    }

    public function photosRanking()
    {
        $qb = $this->createQueryBuilder('s')
            ->select('COUNT(s.id) as nb, s.filename')
            ->groupBy('s.filename')
            ->orderBy('nb', 'DESC')
            ;
        return $qb->getQuery()->getArrayResult();
    }

    public function hostsRanking()
    {
        $qb = $this->createQueryBuilder('s')
            ->select('COUNT(s.id) as nb, s.host')
            ->groupBy('s.host')
            ->orderBy('nb', 'DESC')
        ;
        return $qb->getQuery()->getArrayResult();
    }

    public function downloadsByDay()
    {
        $qb = $this->createQueryBuilder('s')
            ->select('COUNT(s.id), SUBSTRING(s.createdAt,9,2) as m')

            ->groupBy('m')
            ->orderBy('s.createdAt', 'ASC');
        return $qb->getQuery()->getArrayResult();
    }
}
